{
	"name": "prep_layer",
	"properties": {
		"folder": {
			"name": "DF_assessment"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "output_order_data",
						"type": "DatasetReference"
					},
					"name": "orderSource",
					"description": "Add orders dataset"
				},
				{
					"dataset": {
						"referenceName": "output_customer_data",
						"type": "DatasetReference"
					},
					"name": "customerSource"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_paste_inputdata",
						"type": "LinkedServiceReference"
					},
					"name": "orderSink"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1",
					"description": "Creating/updating the columns OrderTimestamp"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     date as string ('9999-99-99 00:00:00.0000000')",
				"}",
				"source(output(",
				"          OrderID as short,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as short,",
				"          OrderTimestamp as string,",
				"          Price as double,",
				"          CustomerID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> orderSource",
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> customerSource",
				"orderSource split(isNull(OrderTimestamp),",
				"     disjoint: false) ~> split1@(TimeStampNulls, notNulls)",
				"split1@TimeStampNulls derive(OrderTimestamp = iifNull(OrderTimestamp, $date)) ~> derivedColumn1",
				"derivedColumn1, split1@notNulls union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'prep-data',",
				"     folderPath: 'orders',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> orderSink"
			]
		}
	}
}